library(CensMFM)

mu          <- Sigma <- shape <- list()
mu[[1]]     <- c(-3,-4)
mu[[2]]     <- c(2,2)
Sigma[[1]]  <- matrix(c(3,1,1,4.5), 2,2)
Sigma[[2]]  <- matrix(c(2,1,1,3.5), 2,2)
shape[[1]]  <- c(-2,2)
shape[[2]]  <- c(-3,4)
nu          <- c(0,0)
pii         <- c(0.6,0.4)
percen <- c(0.1,0.2)
n <- 200
g <- 2
seed <- 654678

set.seed(seed)
test = rMMSN(n = n, pii = pii,mu = mu,Sigma = Sigma,shape = shape,
             percen = percen, each = TRUE, family = "SN")

Zij <- test$G
cc <- test$cc
y <- test$y

## left censoring ##
LI <-cc
LS <-cc
LI[cc==1]<- -Inf
LS[cc==1]<- y[cc==1]


#full analysis may take a few seconds more...

test_fit.cc0 = fit.FMMSNC(cc, LI, LS, y, mu=mu,
                          Sigma = Sigma, shape=shape, pii = pii, g = 2, get.init = FALSE,
                          criteria = TRUE, family = "Normal", error = 0.0001,
                          iter.max = 200, uni.Gama = FALSE, cal.im = FALSE)


test_fit.cc = fit.FMMSNC(cc, LI, LS, y, mu=mu,
                         Sigma = Sigma, shape=shape, pii = pii, g = 2, get.init = FALSE,
                         criteria = TRUE, family = "SN", error = 0.00001,
                         iter.max = 350, uni.Gama = FALSE, cal.im = TRUE)

## missing data ##
pctmiss <- 0.2 # 20% of missing data in the whole data
missing <- matrix(runif(n*g), nrow = n) < pctmiss
y[missing] <- NA

cc <- matrix(nrow = n,ncol = g)
cc[missing] <- 1
cc[!missing] <- 0

LI <- cc
LS <-cc
LI[cc==1]<- -Inf
LS[cc==1]<- +Inf

test_fit.mis = fit.FMMSNC(cc, LI, LS, y, mu=mu,
                          Sigma = Sigma, shape=shape, pii = pii, g = 2, get.init = FALSE,
                          criteria = TRUE, family = "SN", error = 0.00001,
                          iter.max = 350, uni.Gama = FALSE, cal.im = TRUE)
