.dds <- function(a, mu, sigma, dof, tmethod=1) {
  p <- nrow(sigma)
  Tp <- 1
  ET <- .ds2(sigma, dof, mu-a, tmethod)
  mu <- matrix(mu,p)
  EX <- mu - ET$EX
  EXX <- ET$EXX - ET$EX%*%t(mu) - mu%*%t(ET$EX) + mu%*%t(mu)
  return(list(EX=EX/Tp, EXX=EXX/Tp))
}

.ds2 <- function(sigma, dof, a=NULL, tmethod=1) {
  p <- dim(sigma)[1]; if(is.null(p)) {p<-1}
  if (is.null(a)) a<- rep(0,p); a <- as.numeric(a)
  if (p==1) {
    Tp <- pt(a/sqrt(sigma),df=dof)
    EX <- -0.5*sqrt(sigma*dof/pi)*(1+a^2/dof/sigma)^(-0.5*dof+0.5)*gamma(0.5*dof-0.5)/gamma(0.5*dof)
    EXX <- sigma*dof/(dof-2)*Tp + (dof-1)/(dof-2)*a*EX
    return(list("EX"=EX/Tp, "EXX"=EXX/Tp)); return(list("EX"=EX/Tp))
  }else{
    Tp <- pmt(a, rep(0,p), sigma, dof, tmethod)
    xi <- ai <- rep(0,p); theta <- matrix(0, p, p); G1 <- gamma(0.5*dof-0.5)/gamma(0.5*dof)
    V1 <- sqrt(0.5*dof); V2 <- dof^(0.5*dof)/(dof-2)
    for (i in 1:p){
      Sii <- sigma[i,i]                                                                                            
      S1 <- (dof+a[i]^2/Sii)/(dof-1)*(sigma[-i,-i]-sigma[-i,i]%*%t(sigma[-i,i])/Sii)                               
      A1 <- a[-i] - a[i]/Sii*sigma[-i,i]                                                                        
      xi[i] <- (dof/(dof+a[i]^2/Sii))^(0.5*dof-0.5)/sqrt(2*pi*Sii)*G1*V1*pmt(A1, rep(0,p-1), S1, dof-1, tmethod)[1]       
      if(p==2) {                                                     
        if (i == 1) {                                              
          S2 <- solve(sigma)                                     
          V3 <- dof + a %*% S2 %*% a                             
          theta[1,2] <- -V2/(V3^(0.5*dof-1))/(2*pi*sqrt(Sii*sigma[2,2]-sigma[1,2]^2))
          theta[2,1] <- theta[1,2]                               
        }                                                          
      }else{                                                         
        if (i != p) {                                              
          for (j in (i+1):p) {                                   
            S2 <- solve(matrix(c(Sii, sigma[i,j], sigma[i,j], sigma[j,j]),2,2))                                 
            V3 <- dof + a[c(i,j)] %*% S2 %*% a[c(i,j)]                                                            
            S3 <- as.numeric(V3/(dof-2))*(sigma[-c(i,j),-c(i,j)]-matrix(sigma[-c(i,j),c(i,j)],p-2,2)%*%S2%*%t(matrix(sigma[-c(i,j),c(i,j)], p-2, 2))) 
            A2 <- a[-c(i,j)] - sigma[-c(i,j),c(i,j)]%*%S2%*%a[c(i,j)]                                           
            theta[i,j] <- -V2/(V3^(0.5*dof-1))/(2*pi*sqrt(Sii*sigma[j,j]-sigma[i,j]^2))*pmt(A2, rep(0,p-2),S3, dof-2, tmethod)
            theta[j,i] <- theta[i,j]                           
          }                                                      
        }                                                          
      }                                                              
      theta[i,i] <- a[i]*xi[i]/Sii - sum(sigma[i,-i]*theta[i,-i])/Sii
    } 
  } 
  EX <- -sigma%*%xi/Tp       
  EXX <- dof/(dof-2)*pmt(a,rep(0,p),dof/(dof-2)*sigma,dof-2, tmethod)*sigma - sigma%*%theta%*%sigma
  EXX <- EXX/Tp           #pxp
  return(list("EX"=EX, "EXX"=EXX))
}




set.seed(123)

mu    <- rnorm(n = 3, mean = 0, sd = 1)
Sigma <- matrix(data = c(1,0.2,0.3,0.2,1,0.4,0.3,0.4,1), nrow = length(mu), ncol = length(mu), byrow = TRUE)
df    <- 4


#mvtnorm::pmvt(lower = rep(0,length(mu)),delta = mu,sigma = Sigma,df = df,type = "shifted")



.dds(rep(0,3), mu, Sigma, df, tmethod=1)

meanvarTMD(lower = rep(0, length(mu)), upper = rep(Inf, length(mu)), mu = mu, Sigma = Sigma, dist = "t", nu = df)


